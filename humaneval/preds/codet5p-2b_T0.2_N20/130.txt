
def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    count = 0
    for i in lst:
        if i > 0:
            count += 1
    if count == 0:
        return -1
    else:
        return max(lst)


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    freq = {}
    for i in lst:
        if i in freq:
            freq[i] += 1
        else:
            freq[i] = 1
    for i in freq:
        if freq[i] >= i:
            return i
    return -1


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    max_val = -1
    max_freq = 0
    for i in lst:
        if i > 0 and i > max_val and lst.count(i) > max_freq:
            max_val = i
            max_freq = lst.count(i)
    return max_val

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_val = 0
    for i in lst:
        if i > max_val:
            max_freq = 1
            max_val = i
        elif i == max_val:
            max_freq += 1
    if max_freq >= max_val:
        return max_val
    return -1

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([1,

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_num = 0
    for num in lst:
        if num > 0 and num > max_freq:
            max_freq = num
            max_num = num
    return max_num


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    max_freq = 0
    max_num = -1
    for i in lst:
        if i > 0 and i > max_freq:
            max_freq = i
            max_num = i
    return max_num


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_val = 0
    for i in lst:
        if i > max_val:
            max_val = i
            max_freq = 1
        elif i == max_val:
            max_freq += 1
    if max_freq == 0:
        return -1
    return max_val

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5,

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if not lst:
        return -1
    
    max_freq = 0
    max_num = 0
    for num in lst:
        if num > 0 and num > max_freq:
            max_freq = num
            max_num = num
    return max_num

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5,

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_val = 0
    for i in lst:
        if i > max_val and i > 0:
            max_freq = 1
            max_val = i
        elif i == max_val:
            max_freq += 1
    return max_val if max_freq >= max_val else -1


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    
    max_freq = 0
    max_freq_val = 0
    for i in lst:
        if i > 0 and i > max_freq_val:
            max_freq_val = i
            max_freq = 1
        elif i > 0 and i == max_freq_val:
            max_freq += 1
    
    if max_freq == 0:
        return -1
    return max_freq_val

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_freq_val = 0
    for i in lst:
        if i > 0 and i > max_freq_val:
            max_freq_val = i
            max_freq = 1
        elif i > 0 and i == max_freq_val:
            max_freq += 1
    return max_freq_val if max_freq > 0 else -1


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    max_freq = 0
    max_val = -1
    for i in lst:
        if i > 0 and i > max_freq:
            max_freq = i
            max_val = i
    return max_val


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_freq_num = 0
    for i in lst:
        if i > 0 and i > max_freq:
            max_freq = i
            max_freq_num = i
    return max_freq_num

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_val = 0
    for i in lst:
        if i > max_val:
            max_val = i
            max_freq = 1
        elif i == max_val:
            max_freq += 1
    if max_freq >= max_val:
        return max_val
    else:
        return -1


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    max_freq = 0
    max_num = -1
    for i in lst:
        if i > 0 and i > max_freq:
            max_freq = i
            max_num = i
    return max_num

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    
    max_freq = 0
    max_val = 0
    for i in lst:
        if i > 0 and i > max_val:
            max_val = i
            max_freq = 1
        elif i > 0 and i == max_val:
            max_freq += 1
    
    if max_freq == 0:
        return -1
    else:
        return max_val


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_val = 0
    for i in lst:
        if i > max_val:
            max_val = i
            max_freq = 1
        elif i == max_val:
            max_freq += 1
    if max_freq >= max_val:
        return max_val
    else:
        return -1

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4,

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if len(lst) == 0:
        return -1
    max_freq = 0
    max_num = 0
    for num in lst:
        if num > max_num:
            max_num = num
            max_freq = 1
        elif num == max_num:
            max_freq += 1
    if max_freq >= max_num:
        return max_num
    return -1


def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    if not lst:
        return -1
    
    max_freq = 0
    max_num = 0
    for num in lst:
        if num > 0 and num > max_freq:
            max_freq = num
            max_num = num
    return max_num

search([4, 1, 2, 2, 3, 1]) == 2
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
search([5, 5, 4, 4, 4]) == -1
search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4]) == -1
search([5, 5, 4, 4, 4])

def search(lst):
    '''
    You are given a non-empty list of positive integers. Return the greatest integer that is greater than 
    zero, and has a frequency greater than or equal to the value of the integer itself. 
    The frequency of an integer is the number of times it appears in the list.
    If no such a value exist, return -1.
    Examples:
        search([4, 1, 2, 2, 3, 1]) == 2
        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3
        search([5, 5, 4, 4, 4]) == -1
    '''

    max = -1
    for i in lst:
        if i > max and i > 0:
            max = i
    return max

