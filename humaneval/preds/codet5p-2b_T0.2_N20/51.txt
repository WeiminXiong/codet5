
def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    if x.find("/") == -1:
        return False
    if x.find("/") == 0:
        return False
    if x.find("/") == len(x)-1:
        return False
    if x.find("/") == 1:
        return False
    if x.find("/") == 2:
        return False
    if x.find("/") == 3:
        return False
    if x.find("/") == 4:
        return False
    if x.find("/") == 5:
        return False
    if x.find("/") == 6:
        return False
    if x.find("/") == 7:
        return False
    if x.find("/") == 8:
        return False
    if x.find("/") == 9:
        return False
    if x.find("/") == 10:
        return False
    if x.find("/") == 11:
        return False
    if x.find("/") == 12:
        return False
    if x.find("/") == 13:
        return False
    if x.find("/") == 14:
        return False
    if x.find("/") == 15:
        return False
    if x.find("/") == 16:
        return False
    if x.find("/") == 17:
        return False
    if x.find("/") == 18:
        return False
    if x.find("/") == 19:
        return False
    if x.find("/") == 20:
        return False
    if x.find("/") == 21:
        return False
    if x.find("/") == 22:
        return False
    if x.find("/") == 23:
        return False
    if x.find("/") == 24:
        return False
    if x.find("/") == 25:
        return False
    if x.find("/") == 26:
        return False
    if x.find("/") == 27:
        return False
    if x.find("/") == 28:
        return False
    if x.find("/") == 29:
        return False
    if x.find("/") == 30:
        return False
    if x.find("/") == 31:
        return False
    if x.find("/") == 32:
        return False
    if x.find("/") == 33:
        return False
    if x.find("/") == 34:
        return False
    if x.find("/") == 35:
        return False
    if

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x.find("/") == -1:
        return False
    if x.find("/") == 0:
        return False
    if x.find("/") == len(x) - 1:
        return False
    if x.find("/") == len(x) - 2:
        return False
    if x.find("/") == len(x) - 3:
        return False
    if x.find("/") == len(x) - 4:
        return False
    if x.find("/") == len(x) - 5:
        return False
    if x.find("/") == len(x) - 6:
        return False
    if x.find("/") == len(x) - 7:
        return False
    if x.find("/") == len(x) - 8:
        return False
    if x.find("/") == len(x) - 9:
        return False
    if x.find("/") == len(x) - 10:
        return False
    if x.find("/") == len(x) - 11:
        return False
    if x.find("/") == len(x) - 12:
        return False
    if x.find("/") == len(x) - 13:
        return False
    if x.find("/") == len(x) - 14:
        return False
    if x.find("/") == len(x) - 15:
        return False
    if x.find("/") == len(x) - 16:
        return False
    if x.find("/") == len(x) - 17:
        return False
    if x.find("/") == len(x) - 18:
        return False
    if x.find("/") == len(x) - 19:
        return False
    if x.find("/") == len(x) - 20:
        return False
    if x.find("/") == len(x) - 21:
        return False
    if x.find("/") == len(x) - 22:
        return False
    if x.find("/") == len(x) - 23:
        return False
    if x.find("/") == len(x) - 24:
        return False
    if x.find("/") == len(x) - 25:
        return False
    if x.find("/") == len(x) - 26:
        return False
    if x.find("/") == len(x) - 27:
        return False
    if x.find("/") == len(x) - 28:


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "0/1":
        return True
    if x == "0/2":
        return False
    if x == "1/2":
        return False
    if x == "1/3":
        return False
    if x == "2/3":
        return False
    if x == "1/4":
        return False
    if x == "2/4":
        return False
    if x == "1/5":
        return True
    if x == "2/5":
        return False
    if x == "3/5":
        return False
    if x == "4/5":
        return False
    if x == "1/6":
        return False
    if x == "2/6":
        return False
    if x == "3/6":
        return False
    if x == "4/6":
        return False
    if x == "5/6":
        return False
    if x == "1/7":
        return False
    if x == "2/7":
        return False
    if x == "3/7":
        return False
    if x == "4/7":
        return False
    if x == "5/7":
        return False
    if x == "6/7":
        return False
    if x == "1/10":
        return False
    if x == "2/10":
        return False
    if x == "3/10":
        return False
    if x == "4/10":
        return False
    if x == "5/10":
        return False
    if x == "6/10":
        return False
    if x == "7/10":
        return False
    if x == "8/10":
        return False
    if x == "9/10":
        return False
    if x == "1/11":
        return False
    if x == "2/11":
        return False
    if x == "3/11":
        return False
    if x == "4/11":
        return False
    if x == "5/11":
        return False
    if x == "6/11":
        return False
    if x == "7/11":
        return False
    if x == "8/11":
        return False
    if x == "9/11":
        return False

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    x = x.split("/")
    n = n.split("/")
    if int(x[0]) == 0:
        return False
    if int(n[0]) == 0:
        return False
    if int(x[1]) == 0:
        return False
    if int(n[1]) == 0:
        return False
    if int(x[0]) == int(n[0]) and int(x[1]) == int(n[1]):
        return True
    else:
        return False


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "0/1":
        return True
    if x == "1/2":
        return True
    if x == "1/3":
        return True
    if x == "1/4":
        return True
    if x == "1/5":
        return True
    if x == "1/6":
        return True
    if x == "1/7":
        return True
    if x == "1/8":
        return True
    if x == "1/9":
        return True
    if x == "1/10":
        return True
    if x == "1/11":
        return True
    if x == "1/12":
        return True
    if x == "1/13":
        return True
    if x == "1/14":
        return True
    if x == "1/15":
        return True
    if x == "1/16":
        return True
    if x == "1/17":
        return True
    if x == "1/18":
        return True
    if x == "1/19":
        return True
    if x == "1/20":
        return True
    if x == "1/21":
        return True
    if x == "1/22":
        return True
    if x == "1/23":
        return True
    if x == "1/24":
        return True
    if x == "1/25":
        return True
    if x == "1/26":
        return True
    if x == "1/27":
        return True
    if x == "1/28":
        return True
    if x == "1/29":
        return True
    if x == "1/30":
        return True
    if x == "1/31":
        return True
    if x == "1/32":
        return True
    if x == "1/33":
        return True
    if x == "1/34":
        return True
    if x == "1/35":
        return True
    if x == "1/36":
        return True
    if x == "1/37":
        return True
    if x == "1/38":
        return True
    if x == "1/39":
        return True
    if x == "1/40":
        return True

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x == "1":
        return True
    if x[0] == "0":
        return False
    if x[0] == "1":
        return True
    if x[1] == "0":
        return False
    if x[1] == "1":
        return True
    if x[0] == "1" and x[1] == "1":
        return False
    if x[0] == "1" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "1":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "1" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "1":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "0":
        return False
    if x[0] == "0" and x[1] == "

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x == "1":
        return True
    if x[0] == "0":
        return False
    if x[0] == "1":
        return True
    if x[1] == "0":
        return False
    if x[1] == "1":
        return True
    if x[0] == "1":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "1":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "2":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "2":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "3":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "3":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "4":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "4":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "5":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "5":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "6":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "6":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "7":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "7":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "8":
        return simplify(x[1], "1/{}".format(x[1]))
    if x[1] == "8":
        return simplify(x[0], "1/{}".format(x[0]))
    if x[0] == "9":
        return simplify(x[

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x.find("/") == -1:
        return False
    x = x.split("/")
    n = n.split("/")
    if x[0] == "0":
        return False
    if n[0] == "0":
        return False
    if x[1] == "0":
        return False
    if n[1] == "0":
        return False
    if x[0] == "1":
        return False
    if n[0] == "1":
        return False
    if x[1] == "1":
        return False
    if n[1] == "1":
        return False
    if x[0] == n[0]:
        return False
    if x[1] == n[1]:
        return False
    if x[0] == n[1]:
        return False
    if x[1] == n[0]:
        return False
    if x[0] == "0":
        return False
    if x[1] == "0":
        return False
    if n[0] == "0":
        return False
    if n[1] == "0":
        return False
    if x[0] == "1":
        return False
    if x[1] == "1":
        return False
    if n[0] == "1":
        return False
    if n[1] == "1":
        return False
    if x[0] == "2":
        return False
    if n[0] == "2":
        return False
    if x[1] == "2":
        return False
    if n[1] == "2":
        return False
    if x[0] == "3":
        return False
    if n[0] == "3":
        return False
    if x[1] == "3":
        return False
    if n[1] == "3":
        return False
    if x[0] == "4":
        return False
    if n[0] == "4":
        return False
    if x[1] == "4":
        return False
    if n[1] == "4":
        return False
    if x[0] == "5":
        return False
    if n[0] == "5":
        return False
    if x[1] == "5":
        return False
    if n[1] == "5":
        return False
    if x[0] == "6":
        return False
    if n[0] == "6":
        return False
    if x[1]

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    return True if x.split("/")[0] == "0" or x.split("/")[1] == "0" else False


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    else:
        x = x.split("/")
        n = n.split("/")
        if x[1] == n[1]:
            return True
        else:
            return False


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x == "1":
        return True
    if x[0] == "0":
        return False
    if x[0] == "1":
        return True
    if x[1] == "0":
        return False
    if x[1] == "1":
        return True
    if x[1] == "2":
        return False
    if x[1] == "3":
        return False
    if x[1] == "4":
        return False
    if x[1] == "5":
        return False
    if x[1] == "6":
        return False
    if x[1] == "7":
        return False
    if x[1] == "8":
        return False
    if x[1] == "9":
        return False
    if x[1] == "10":
        return False
    if x[1] == "11":
        return False
    if x[1] == "12":
        return False
    if x[1] == "13":
        return False
    if x[1] == "14":
        return False
    if x[1] == "15":
        return False
    if x[1] == "16":
        return False
    if x[1] == "17":
        return False
    if x[1] == "18":
        return False
    if x[1] == "19":
        return False
    if x[1] == "20":
        return False
    if x[1] == "21":
        return False
    if x[1] == "22":
        return False
    if x[1] == "23":
        return False
    if x[1] == "24":
        return False
    if x[1] == "25":
        return False
    if x[1] == "26":
        return False
    if x[1] == "27":
        return False
    if x[1] == "28":
        return False
    if x[1] == "29":
        return False
    if x[1] == "30":
        return False
    if x[1] == "31":
        return False
    if x[1] == "32":
        return False
    if x[1] == "33":
        return False
    if x[1] == "34":
        return False
    if x[1] == "35":
        return False
    if x[1] == "36":
        return False
    if x[1] == "37":
        return False
    if x[1

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "0/1":
        return False
    if x == "1/0":
        return False
    if x == "1/1":
        return True
    if x == "1/2":
        return False
    if x == "1/3":
        return False
    if x == "1/4":
        return False
    if x == "1/5":
        return False
    if x == "1/6":
        return False
    if x == "1/7":
        return False
    if x == "1/8":
        return False
    if x == "1/9":
        return False
    if x == "1/10":
        return False
    if x == "1/11":
        return False
    if x == "1/12":
        return False
    if x == "1/13":
        return False
    if x == "1/14":
        return False
    if x == "1/15":
        return False
    if x == "1/16":
        return False
    if x == "1/17":
        return False
    if x == "1/18":
        return False
    if x == "1/19":
        return False
    if x == "1/20":
        return False
    if x == "1/21":
        return False
    if x == "1/22":
        return False
    if x == "1/23":
        return False
    if x == "1/24":
        return False
    if x == "1/25":
        return False
    if x == "1/26":
        return False
    if x == "1/27":
        return False
    if x == "1/28":
        return False
    if x == "1/29":
        return False
    if x == "1/30":
        return False
    if x == "1/31":
        return False
    if x == "1/32":
        return False
    if x == "1/33":
        return False
    if x == "1/34":
        return False
    if x == "1/35":
        return False
    if x == "1/36":
        return False
    if x == "1/37":
        return False
    if x == "1/38":
        return False

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x.find("/") == -1:
        return False
    else:
        x = x.split("/")
        if x[0] == "0":
            return False
        else:
            x[0] = int(x[0])
            x[1] = int(x[1])
            if x[1] == 1:
                return True
            else:
                return simplify(x[0]/x[1], "1/{}".format(x[1]))


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False
    if x == "1/1":
        return True
    if x == "0/1":
        return False
    if x == "0/0":
        return False
    if x == "1/0":
        return False
    if x == "0/0":
        return False

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0/1":
        return False
    else:
        x = x.split("/")
        n = n.split("/")
        if int(x[0]) == 0:
            return False
        elif int(x[1]) == 0:
            return False
        elif int(n[0]) == 0:
            return False
        elif int(n[1]) == 0:
            return False
        else:
            return True


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x == "1":
        return True
    if x[0] == "0":
        return False
    if x[0] == "1":
        return True
    if x[0] == "-":
        x = x[1:]
        if x[0] == "0":
            return False
        if x[0] == "1":
            return True
        if x[0] == "-":
            x = x[1:]
            if x[0] == "0":
                return False
            if x[0] == "1":
                return True
            if x[0] == "-":
                x = x[1:]
                if x[0] == "0":
                    return False
                if x[0] == "1":
                    return True
                if x[0] == "-":
                    x = x[1:]
                    if x[0] == "0":
                        return False
                    if x[0] == "1":
                        return True
                    if x[0] == "-":
                        x = x[1:]
                        if x[0] == "0":
                            return False
                        if x[0] == "1":
                            return True
                        if x[0] == "-":
                            x = x[1:]
                            if x[0] == "0":
                                return False
                            if x[0] == "1":
                                return True
                            if x[0] == "-":
                                x = x[1:]
                                if x[0] == "0":
                                    return False
                                if x[0] == "1":
                                    return True
                                if x[0] == "-":
                                    x = x[1:]
                                    if x[0] == "0":
                                        return False
                                    if x[0] == "1":
                                        return True
                                    if x[0] == "-":
                                        x = x[1:]
                                        if x[0] == "0":
                                            return False
                                        if x[0] == "1":
                                            return True
                                        if x[0] == "-":
                                            x = x[1:]
                                            if x[0] == "0":
                                                return False
                                            if x[0] == "1":
                                                return True
                                            if x[0] == "-":
                                                x = x[1:]
                                                if x[0] == "0":
                                                    return False
                                                if x[0] == "1":
                                                    return True
                                                if x[0] == "-":
                                                    x = x[1:]
                                                    if x[0] ==

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x.find("/") == -1:
        return False
    else:
        numerator = int(x.split("/")[0])
        denominator = int(x.split("/")[1])
        if numerator == 0:
            return False
        elif numerator == denominator:
            return True
        else:
            return simplify(str(numerator/denominator), str(denominator))


def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x == "1":
        return True
    if x[0] == "0":
        return False
    if x[0] == "1":
        return True
    if x[1] == "0":
        return False
    if x[1] == "1":
        return True
    if x[1] == "2":
        return False
    if x[1] == "3":
        return False
    if x[1] == "4":
        return False
    if x[1] == "5":
        return False
    if x[1] == "6":
        return False
    if x[1] == "7":
        return False
    if x[1] == "8":
        return False
    if x[1] == "9":
        return False
    if x[1] == "10":
        return False
    if x[1] == "11":
        return False
    if x[1] == "12":
        return False
    if x[1] == "13":
        return False
    if x[1] == "14":
        return False
    if x[1] == "15":
        return False
    if x[1] == "16":
        return False
    if x[1] == "17":
        return False
    if x[1] == "18":
        return False
    if x[1] == "19":
        return False
    if x[1] == "20":
        return False
    if x[1] == "21":
        return False
    if x[1] == "22":
        return False
    if x[1] == "23":
        return False
    if x[1] == "24":
        return False
    if x[1] == "25":
        return False
    if x[1] == "26":
        return False
    if x[1] == "27":
        return False
    if x[1] == "28":
        return False
    if x[1] == "29":
        return False
    if x[1] == "30":
        return False
    if x[1] == "31":
        return False
    if x[1] == "32":
        return False
    if x[1] == "33":
        return False
    if x[1] == "34":
        return False
    if x[1] == "35":
        return False
    if x[1] == "36":
        return False
    if x[1] == "37":
        return False
    if x[1

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x.count("/") == 1:
        numerator, denominator = x.split("/")
        if numerator == "0" and denominator == "0":
            return False
        if numerator == "0":
            return False
        if denominator == "0":
            return False
        if numerator == "0" and denominator == "1":
            return False
        if numerator == "1" and denominator == "0":
            return False
        if numerator == "1" and denominator == "1":
            return True
        if numerator == "1" and denominator == "2":
            return False
        if numerator == "2" and denominator == "1":
            return False
        if numerator == "2" and denominator == "2":
            return True
        if numerator == "2" and denominator == "3":
            return False
        if numerator == "3" and denominator == "2":
            return False
        if numerator == "3" and denominator == "3":
            return True
        if numerator == "3" and denominator == "4":
            return False
        if numerator == "4" and denominator == "3":
            return False
        if numerator == "4" and denominator == "4":
            return True
        if numerator == "4" and denominator == "5":
            return False
        if numerator == "5" and denominator == "4":
            return False
        if numerator == "5" and denominator == "5":
            return True
        if numerator == "5" and denominator == "6":
            return False
        if numerator == "6" and denominator == "5":
            return False
        if numerator == "6" and denominator == "6":
            return True
        if numerator == "6" and denominator == "7":
            return False
        if numerator == "7" and denominator == "6":
            return False
        if numerator == "7" and denominator == "7":
            return True
        if numerator == "7" and denominator == "8":
            return False
        if numerator == "8" and denominator == "7":
            return False
        if numerator == "8" and denominator == "8":
            return True
        if numerator == "8" and denominator == "9":
            return False
        if numerator == "9" and denominator == "8":
            return False
        if numerator == "9" and denominator == "9":
            return True
        if numerator

def simplify(x, n):
    """Your task is to implement a function that will simplify the expression
    x * n. The function returns True if x * n evaluates to a whole number and False
    otherwise. Both x and n, are string representation of a fraction, and have the following format,
    <numerator>/<denominator> where both numerator and denominator are positive whole numbers.

    You can assume that x, and n are valid fractions, and do not have zero as denominator.

    simplify("1/5", "5/1") = True
    simplify("1/6", "2/1") = False
    simplify("7/10", "10/2") = False
    """

    if x == "0":
        return False
    if x.find("/") == -1:
        return False
    if x.find("/") == 0:
        return False
    if x.find("/") == 1:
        return False
    if x.find("/") == 2:
        return False
    if x.find("/") == 3:
        return False
    if x.find("/") == 4:
        return False
    if x.find("/") == 5:
        return False
    if x.find("/") == 6:
        return False
    if x.find("/") == 7:
        return False
    if x.find("/") == 8:
        return False
    if x.find("/") == 9:
        return False
    if x.find("/") == 10:
        return False
    if x.find("/") == 11:
        return False
    if x.find("/") == 12:
        return False
    if x.find("/") == 13:
        return False
    if x.find("/") == 14:
        return False
    if x.find("/") == 15:
        return False
    if x.find("/") == 16:
        return False
    if x.find("/") == 17:
        return False
    if x.find("/") == 18:
        return False
    if x.find("/") == 19:
        return False
    if x.find("/") == 20:
        return False
    if x.find("/") == 21:
        return False
    if x.find("/") == 22:
        return False
    if x.find("/") == 23:
        return False
    if x.find("/") == 24:
        return False
    if x.find("/") == 25:
        return False
    if x.find("/") == 26:
        return False
    if x.find("/") == 27:
        return False
    if x.find("/") == 28:
        return False
    if x.find("/") == 29:
        return False
    if x.find("/") == 30:
        return False
    if x.find("/") == 31:
        return False
    if x.find("/") == 32:
        return False
    if x.find("/") == 33:
        return False
    if x.find("/") == 34:
        return False
    if x.find("/") == 35:
        return False
    if x.find("/") == 36:
        return False
    if x.find("/")
