
def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    else:
        if array[0] + array[-1] % 2 == 0:
            return sort_array(array[1:-1]) + [array[0]]
        else:
            return sort_array(array[1:-1]) + [array[-1]]


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    return sorted(array)


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    if len(array) == 3:
        if array[0] + array[1] + array[2] % 2 == 0:
            return [array[2], array[0], array[1]]
        else:
            return [array[0], array[1], array[2]]
    if len(array) == 4:
        if array[0] + array[1] + array[2] + array[3] % 2 == 0:
            return [array[3], array[0], array[1], array[2]]
        else:
            return [array[0], array[1], array[2], array[3]]
    if len(array) == 5:
        if array[0] + array[1] + array[2] + array[3] + array[4] % 2 == 0:
            return [array[4], array[0], array[1], array[2], array[3]]
        else:
            return [array[0], array[1], array[2], array[3], array[4]]
    if len(array) == 6:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] % 2 == 0:
            return [array[5], array[0], array[1], array[2], array[3], array[4]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5]]
    if len(array) == 7:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] % 2 == 0:
            return [array[6], array[0], array[1], array[2], array[3], array[4], array[5]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5], array[6]]
    if len(array) == 8:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] + array[7

def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    return sorted(array)


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] == array[1]:
            return array
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        if array[0] + array[1] % 2 == 1:
            return [array[0], array[1]]
    if len(array) > 2:
        if array[0] + array[1] % 2 == 0:
            return sort_array([array[0], array[1]]) + sort_array(array[2:])
        if array[0] + array[1] % 2 == 1:
            return sort_array([array[1], array[0]]) + sort_array(array[2:])


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    else:
        mid = len(array) // 2
        left = sort_array(array[:mid])
        right = sort_array(array[mid:])
        if sum(left) % 2 == 0 and sum(right) % 2 == 0:
            return merge_array(left, right)
        elif sum(left) % 2 == 0 and sum(right) % 2!= 0:
            return merge_array(left, right)
        elif sum(left) % 2!= 0 and sum(right) % 2 == 0:
            return merge_array(left, right)
        else:
            return merge_array(left, right)



def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return array
    odd = []
    even = []
    for i in array:
        if i % 2 == 0:
            even.append(i)
        else:
            odd.append(i)
    if sum(odd) % 2 == 0:
        odd.sort()
        even.sort(reverse=True)
        return odd + even
    else:
        odd.sort()
        even.sort()
        return odd + even


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if not array:
        return []
    if len(array) == 1:
        return array

    odd_sum = sum(array[0:len(array)//2])
    even_sum = sum(array[len(array)//2:len(array)])

    if odd_sum % 2 == 1 and even_sum % 2 == 0:
        return sorted(array, reverse=True)
    elif odd_sum % 2 == 0 and even_sum % 2 == 1:
        return sorted(array)
    else:
        return array


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return array
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    else:
        array.sort()
        if array[0] + array[-1] % 2 == 0:
            return array[1:-1]
        else:
            return array[-1:-1]


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    if len(array) == 3:
        if array[0] + array[1] + array[2] % 2 == 0:
            return [array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2]]
    if len(array) == 4:
        if array[0] + array[1] + array[2] + array[3] % 2 == 0:
            return [array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3]]
    if len(array) == 5:
        if array[0] + array[1] + array[2] + array[3] + array[4] % 2 == 0:
            return [array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4]]
    if len(array) == 6:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] % 2 == 0:
            return [array[5], array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5]]
    if len(array) == 7:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] % 2 == 0:
            return [array[6], array[5], array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5], array[6]]
    if len(array) == 8:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] + array[7

def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array

    odd = []
    even = []
    for i in range(len(array)):
        if i == 0:
            odd.append(array[i])
        elif i == len(array) - 1:
            even.append(array[i])
        else:
            if array[i] % 2 == 0:
                even.append(array[i])
            else:
                odd.append(array[i])

    if sum(odd) % 2 == 1:
        odd.sort(reverse=True)
    else:
        odd.sort()

    if sum(even) % 2 == 1:
        even.sort(reverse=True)
    else:
        even.sort()

    return odd + even


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    else:
        mid = len(array) // 2
        left = sort_array(array[:mid])
        right = sort_array(array[mid:])
        if sum(left) % 2 == 0 and sum(right) % 2 == 0:
            return left + right
        elif sum(left) % 2 == 0 and sum(right) % 2!= 0:
            return left + right[::-1]
        elif sum(left) % 2!= 0 and sum(right) % 2 == 0:
            return left[::-1] + right
        else:
            return left[::-1] + right[::-1]


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return array
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    else:
        if array[0] + array[-1] % 2 == 0:
            return sort_array(array[1:-1]) + [array[0]]
        else:
            return sort_array(array[1:-1]) + [array[-1]]


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    return sorted(array)


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    return sorted(array)


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array

    odd_sum = sum(array[0], array[-1])
    if odd_sum % 2 == 1:
        return sort_array(array[::-1])
    else:
        return sort_array(array[::-1]) + array


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    return sorted(array)


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    if len(array) == 3:
        if array[0] + array[1] + array[2] % 2 == 0:
            return [array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2]]
    if len(array) == 4:
        if array[0] + array[1] + array[2] + array[3] % 2 == 0:
            return [array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3]]
    if len(array) == 5:
        if array[0] + array[1] + array[2] + array[3] + array[4] % 2 == 0:
            return [array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4]]
    if len(array) == 6:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] % 2 == 0:
            return [array[5], array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5]]
    if len(array) == 7:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] % 2 == 0:
            return [array[6], array[5], array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5], array[6]]
    if len(array) == 8:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] + array[7

def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if not array:
        return []
    if len(array) == 1:
        return array
    if sum(array[0], array[-1]) % 2 == 0:
        return sort_array(array[1:-1]) + [array[0]] + sort_array(array[-1:])
    else:
        return sort_array(array[1:-1]) + [array[-1]] + sort_array(array[0:-1])


def sort_array(array):
    """
    Given an array of non-negative integers, return a copy of the given array after sorting,
    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,
    or sort it in descending order if the sum( first index value, last index value) is even.

    Note:
    * don't change the given array.

    Examples:
    * sort_array([]) => []
    * sort_array([5]) => [5]
    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]
    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]
    """

    if len(array) == 0:
        return []
    if len(array) == 1:
        return array
    if len(array) == 2:
        if array[0] + array[1] % 2 == 0:
            return [array[1], array[0]]
        else:
            return [array[0], array[1]]
    if len(array) == 3:
        if array[0] + array[1] + array[2] % 2 == 0:
            return [array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2]]
    if len(array) == 4:
        if array[0] + array[1] + array[2] + array[3] % 2 == 0:
            return [array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3]]
    if len(array) == 5:
        if array[0] + array[1] + array[2] + array[3] + array[4] % 2 == 0:
            return [array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4]]
    if len(array) == 6:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] % 2 == 0:
            return [array[5], array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5]]
    if len(array) == 7:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] % 2 == 0:
            return [array[6], array[5], array[4], array[3], array[2], array[1], array[0]]
        else:
            return [array[0], array[1], array[2], array[3], array[4], array[5], array[6]]
    if len(array) == 8:
        if array[0] + array[1] + array[2] + array[3] + array[4] + array[5] + array[6] + array[7
