from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i-1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return (numbers[smallest_index], numbers[largest_index])


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    closest_elements = []
    closest_elements.append(min(numbers))
    closest_elements.append(max(numbers))
    return tuple(closest_elements)
    
    
from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_difference = float("inf")
    smallest_index = None
    largest_difference = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        difference = numbers[i] - numbers[i - 1]
        if difference < smallest_difference:
            smallest_difference = difference
            smallest_index = i
        if difference > largest_difference:
            largest_difference = difference
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two elements")
    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i - 1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]
    
from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_difference = float("inf")
    smallest_index = None
    largest_difference = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        difference = numbers[i] - numbers[i-1]
        if difference < smallest_difference:
            smallest_difference = difference
            smallest_index = i
        if difference > largest_difference:
            largest_difference = difference
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two numbers")
    smallest_difference = float("inf")
    smallest_index = None
    largest_difference = float("-inf")
    largest_index = None
    for i, num in enumerate(numbers):
        if num < smallest_difference:
            smallest_difference = num
            smallest_index = i
        if num > largest_difference:
            largest_difference = num
            largest_index = i
    return smallest_index, largest_index

from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two numbers.")
    smallest_number = numbers[0]
    largest_number = numbers[0]
    for number in numbers:
        if number < smallest_number:
            smallest_number = number
        if number > largest_number:
            largest_number = number
    return smallest_number, largest_number


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i - 1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]

from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two numbers")
    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i - 1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two numbers")
    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i, num in enumerate(numbers):
        diff = abs(num - numbers[i - 1])
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]
    

from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i-1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    numbers.sort()
    return numbers[0], numbers[-1]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_difference = float("inf")
    smallest_index = None
    largest_difference = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            difference = numbers[i] - numbers[j]
            if difference < smallest_difference:
                smallest_difference = difference
                smallest_index = i
            if difference > largest_difference:
                largest_difference = difference
                largest_index = j
    return (numbers[smallest_index], numbers[largest_index])


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_diff = float('inf')
    smallest_diff_index = None
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            diff = numbers[i] - numbers[j]
            if diff < smallest_diff:
                smallest_diff = diff
                smallest_diff_index = (i, j)
    return numbers[smallest_diff_index[0]], numbers[smallest_diff_index[1]]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_diff = float('inf')
    smallest_index = None
    largest_diff = float('-inf')
    largest_index = None
    for i, num in enumerate(numbers):
        diff = abs(num - numbers[i - 1])
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]

from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_difference = float('inf')
    smallest_index = None
    largest_difference = float('-inf')
    largest_index = None
    for i in range(len(numbers) - 1):
        difference = numbers[i + 1] - numbers[i]
        if difference < smallest_difference:
            smallest_difference = difference
            smallest_index = i
        if difference > largest_difference:
            largest_difference = difference
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    numbers.sort()
    return numbers[0], numbers[-1]
    
    
from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i - 1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two elements")
    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[0]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]

from typing import List, Tuple


def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    """ From a supplied list of numbers (of length at least two) select and return two that are the closest to each
    other and return them in order (smaller number, larger number).
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])
    (2.0, 2.2)
    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])
    (2.0, 2.0)
    """

    if len(numbers) < 2:
        raise ValueError("List must contain at least two elements")
    smallest_diff = float("inf")
    smallest_index = None
    largest_diff = float("-inf")
    largest_index = None
    for i in range(len(numbers)):
        diff = numbers[i] - numbers[i - 1]
        if diff < smallest_diff:
            smallest_diff = diff
            smallest_index = i
        if diff > largest_diff:
            largest_diff = diff
            largest_index = i
    return numbers[smallest_index], numbers[largest_index]


